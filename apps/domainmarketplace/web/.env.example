# Domain Marketplace - Environment Variables
# Copy this file to .env.local for local development
# For Vercel deployment, set these in Vercel Dashboard → Settings → Environment Variables

# =============================================================================
# DATABASE
# =============================================================================

# Neon PostgreSQL connection string
# Auto-injected by Vercel Neon integration in production
# For local development, get from Neon Dashboard
DATABASE_URL=postgresql://user:password@host.neon.tech/dbname?sslmode=require

# =============================================================================
# REDIS CACHE
# =============================================================================

# Upstash Redis REST API endpoint
# Auto-injected by Vercel Upstash integration in production
# For local development, get from Upstash Dashboard
UPSTASH_REDIS_REST_URL=https://your-redis.upstash.io

# Upstash Redis REST API token
# Auto-injected by Vercel Upstash integration in production
UPSTASH_REDIS_REST_TOKEN=your-token-here

# =============================================================================
# AUTHENTICATION (Clerk)
# =============================================================================

# Clerk publishable key (public, safe to expose in browser)
# Get from Clerk Dashboard → API Keys
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_...

# Clerk secret key (server-side only, keep secret)
# Get from Clerk Dashboard → API Keys
CLERK_SECRET_KEY=sk_test_...

# Clerk webhook secret for user sync
# Get from Clerk Dashboard → Webhooks → Add Endpoint
CLERK_WEBHOOK_SECRET=whsec_...

# =============================================================================
# PAYMENTS (Stripe)
# =============================================================================

# Stripe publishable key (public, safe to expose in browser)
# Get from Stripe Dashboard → Developers → API Keys
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...

# Stripe secret key (server-side only, keep secret)
# Get from Stripe Dashboard → Developers → API Keys
STRIPE_SECRET_KEY=sk_test_...

# Stripe webhook secret for event verification
# Get from Stripe Dashboard → Developers → Webhooks → Add Endpoint
STRIPE_WEBHOOK_SECRET=whsec_...

# Stripe Connect client ID for marketplace payouts
# Get from Stripe Dashboard → Connect → Settings
STRIPE_CONNECT_CLIENT_ID=ca_...

# Platform fee percentage (default: 4%)
# Percentage of each transaction taken as platform fee
STRIPE_PLATFORM_FEE_PERCENT=4

# =============================================================================
# CLOUDFLARE (Optional - for DNS management)
# =============================================================================

# Cloudflare API token with DNS edit permissions
# Get from Cloudflare Dashboard → My Profile → API Tokens
CLOUDFLARE_API_TOKEN=your-token-here

# Cloudflare account ID
# Get from Cloudflare Dashboard → Account ID
CLOUDFLARE_ACCOUNT_ID=your-account-id

# Cloudflare zone ID for your domain
# Get from Cloudflare Dashboard → Domain → Overview → Zone ID
CLOUDFLARE_ZONE_ID=your-zone-id

# Fallback origin for custom domains
# Used when custom domain is not configured
CLOUDFLARE_FALLBACK_ORIGIN=https://yourdomain.com

# =============================================================================
# CRON JOBS
# =============================================================================

# Secret for authenticating cron job requests
# Generate a random string (e.g., openssl rand -base64 32)
# Used in Authorization header: Bearer ${CRON_SECRET}
CRON_SECRET=your-random-secret-here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# CORS allowed origin (defaults to NEXT_PUBLIC_APP_URL if not set)
# Set to your production domain
CORS_ORIGIN=https://yourdomain.com

# Public app URL (used in emails, redirects, etc.)
# Set to your production domain
NEXT_PUBLIC_APP_URL=https://yourdomain.com

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================

# Node environment (automatically set by Vercel)
# For local development, set to 'development'
NODE_ENV=development

# =============================================================================
# NOTES
# =============================================================================

# 1. NEVER commit .env.local to version control
# 2. Use different keys for development and production
# 3. Rotate secrets regularly for security
# 4. Vercel integrations auto-inject DATABASE_URL and UPSTASH_* variables
# 5. Set environment variables in Vercel Dashboard for production
# 6. Use Vercel CLI to pull environment variables: vercel env pull

# =============================================================================
# VERCEL DEPLOYMENT
# =============================================================================

# To set environment variables in Vercel:
# 1. Go to Vercel Dashboard → Project → Settings → Environment Variables
# 2. Add each variable with appropriate scope (Production, Preview, Development)
# 3. Or use Vercel CLI: vercel env add <KEY>

# To pull environment variables from Vercel:
# vercel env pull .env.local

# =============================================================================
# INTEGRATIONS
# =============================================================================

# Install these Vercel integrations to auto-inject variables:
# 1. Neon - Auto-injects DATABASE_URL
# 2. Upstash - Auto-injects UPSTASH_REDIS_REST_URL and UPSTASH_REDIS_REST_TOKEN

# =============================================================================
# TESTING
# =============================================================================

# For local testing with Stripe CLI:
# stripe listen --forward-to http://localhost:3000/api/webhooks/stripe

# For local testing with Clerk webhooks:
# Use ngrok or similar to expose local server:
# ngrok http 3000
# Then configure webhook in Clerk Dashboard

# =============================================================================
# SECURITY BEST PRACTICES
# =============================================================================

# 1. Use test keys for development (pk_test_*, sk_test_*)
# 2. Use production keys only in production environment
# 3. Never log or expose secret keys
# 4. Rotate webhook secrets if compromised
# 5. Use environment-specific secrets (dev, staging, prod)
# 6. Enable Vercel's secret scanning
# 7. Review access logs regularly

